{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport fetch from 'isomorphic-unfetch';\nexport function getJobContent() {\n  return _getJobContent.apply(this, arguments);\n}\n\nfunction _getJobContent() {\n  _getJobContent = _asyncToGenerator(\n  /*#__PURE__*/\n  _regeneratorRuntime.mark(function _callee() {\n    var response, body;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return fetch('https://api.myjson.com/bins/cdxq0');\n\n          case 2:\n            response = _context.sent;\n            _context.next = 5;\n            return response.json();\n\n          case 5:\n            body = _context.sent;\n\n            if (!(response.status !== 200)) {\n              _context.next = 8;\n              break;\n            }\n\n            throw Error(body.message);\n\n          case 8:\n            return _context.abrupt(\"return\", body);\n\n          case 9:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n  return _getJobContent.apply(this, arguments);\n}","map":{"version":3,"sources":["/Users/shipatwa/Desktop/challenges/heyjobs_challenge/src/sagas/apis.ts"],"names":["fetch","getJobContent","response","json","body","status","Error","message"],"mappings":";;AACA,OAAOA,KAAP,MAAkB,oBAAlB;AACA,gBAAsBC,aAAtB;AAAA;AAAA;;;;;2BAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mBACoBD,KAAK,CAAC,mCAAD,CADzB;;AAAA;AACGE,YAAAA,QADH;AAAA;AAAA,mBAEgBA,QAAQ,CAACC,IAAT,EAFhB;;AAAA;AAEGC,YAAAA,IAFH;;AAAA,kBAGCF,QAAQ,CAACG,MAAT,KAAoB,GAHrB;AAAA;AAAA;AAAA;;AAAA,kBAGgCC,KAAK,CAACF,IAAI,CAACG,OAAN,CAHrC;;AAAA;AAAA,6CAIIH,IAJJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,G","sourcesContent":["\nimport fetch from 'isomorphic-unfetch';\nexport async function getJobContent(){\n    const response = await fetch('https://api.myjson.com/bins/cdxq0');\n    const body = await response.json();\n    if (response.status !== 200) throw Error(body.message);\n    return body;\n}\n"]},"metadata":{},"sourceType":"module"}