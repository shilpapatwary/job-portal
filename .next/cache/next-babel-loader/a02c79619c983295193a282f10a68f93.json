{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\n\nvar _marked =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchGetJobsAsync),\n    _marked2 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(watchGetJobs),\n    _marked3 =\n/*#__PURE__*/\n_regeneratorRuntime.mark(root);\n\nimport { takeEvery, put, call, fork } from 'redux-saga/effects';\nimport { JobTypes } from '../redux/types';\nimport { getSampleContent } from './apis';\nexport function watchGetJobsAsync() {\n  var data;\n  return _regeneratorRuntime.wrap(function watchGetJobsAsync$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return call(getSampleContent);\n\n        case 2:\n          data = _context.sent;\n          _context.next = 5;\n          return put({\n            type: JobTypes.GET_JOBS_ASYNC,\n            data: data\n          });\n\n        case 5:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, _marked);\n}\n\nfunction watchGetJobs() {\n  return _regeneratorRuntime.wrap(function watchGetJobs$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return takeEvery(JobTypes.GET_JOBS, watchGetJobsAsync);\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, _marked2);\n}\n\nexport default function root() {\n  return _regeneratorRuntime.wrap(function root$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return fork(watchGetJobs);\n\n        case 2:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, _marked3);\n}","map":{"version":3,"sources":["/Users/shipatwa/Desktop/challenges/heyjobs_challenge/src/sagas/sagas.ts"],"names":["watchGetJobsAsync","watchGetJobs","root","takeEvery","put","call","fork","JobTypes","getSampleContent","data","type","GET_JOBS_ASYNC","GET_JOBS"],"mappings":";;;;yBAKiBA,iB;;;yBAKPC,Y;;;yBAIeC,I;;AAdzB,SAASC,SAAT,EAAoBC,GAApB,EAAyBC,IAAzB,EAA+BC,IAA/B,QAA2C,oBAA3C;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,SAASC,gBAAT,QAAiC,QAAjC;AAGA,OAAO,SAAUR,iBAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACU,iBAAMK,IAAI,CAACG,gBAAD,CAAV;;AADV;AACGC,UAAAA,IADH;AAAA;AAEH,iBAAML,GAAG,CAAC;AAACM,YAAAA,IAAI,EAAEH,QAAQ,CAACI,cAAhB;AAAgCF,YAAAA,IAAI,EAAJA;AAAhC,WAAD,CAAT;;AAFG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAKP,SAAUR,YAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACI,iBAAME,SAAS,CAACI,QAAQ,CAACK,QAAV,EAAoBZ,iBAApB,CAAf;;AADJ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAIA,eAAe,SAAUE,IAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AACX,iBAAMI,IAAI,CAACL,YAAD,CAAV;;AADW;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA","sourcesContent":["import { takeEvery, put, call, fork } from 'redux-saga/effects';\nimport { JobTypes } from '../redux/types';\nimport { getSampleContent } from './apis';\n\n\nexport function* watchGetJobsAsync() {\n    const data = yield call(getSampleContent);\n    yield put({type: JobTypes.GET_JOBS_ASYNC, data})\n}\n\nfunction* watchGetJobs() {\n    yield takeEvery(JobTypes.GET_JOBS, watchGetJobsAsync)\n}\n\nexport default function* root() {\n    yield fork(watchGetJobs);\n}\n"]},"metadata":{},"sourceType":"module"}